//面试题55：二叉树的深度
//题目1：二叉树的深度
int TreeDepth(BinaryTreeNode* pRoot)
{
  if(pRoot==nullptr)
    return 0;
  
  int nLeft=TreeDepth(pRoot->m_pLeft)
  int nRight=TreeDepth(pRoot->m_pRight);
  
  return (nLeft>nRight)?(nLeft+1):(nRight+1);
}

//题目2：平衡二叉树
bool IsBalanced(BinaryTreeNode* pRoot,int* pDepth)
{
  if(pRoot==nullptr){
    *pDepth=0; 
    return true;
  }
  int left,right;
  if(IsBalanced(pRoot->m_pLeft,&left)&&IsBalanced(pRoot->m_pRight,&right)){
    int diff=left-right;
    if(diff<=1 && diff>=-1){
      *pDepth=1+(left>right?left:right);
      return true;
    }
  }
  return false;
}

bool IsBalanced(BinaryTreeNode* pRoot)
{
  int depth=0;
  return IsBalanced(pRoot,&depth);
}
